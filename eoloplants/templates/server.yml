---
{{- $fullName := include "eoloplants.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}-server-deploy
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "eoloplants.selectorLabels" . | nindent 6 }}
      app: {{ $fullName }}-server
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ $fullName }}-server
        {{- include "eoloplants.selectorLabels" . | nindent 8 }}
        dns-policy: enabled
    spec:
      securityContext:
        runAsUser: 1001
      restartPolicy: Always
      containers:
      - name: {{ $fullName }}-server
        image: {{ .Values.images.server.repository }}:{{ .Values.images.server.tag }} 
        imagePullPolicy: {{ .Values.images.server.pullPolicy }}
        command: ["bash"]
        args:
        - "-c"
        - "./wait-for-it.sh {{ $fullName }}-mysql-service:3306 -t 500 -- ./wait-for-it.sh {{ $fullName }}-rabbitmq-service:5672 -t 500 -- node src/server.js"
        env:
        - name: MYSQL_HOST
          value: {{ $fullName }}-mysql-service
        - name: MYSQL_DB
          value: eoloplantsDB
        - name: MYSQL_USER
          value: root
        - name: MYSQL_PASS
          value: password
        - name: RABBITMQ_URL
          value: amqp://root:password@{{ $fullName }}-rabbitmq-service
        ports:
        - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $fullName }}-server-service
  labels:
    app: {{ $fullName }}-server
    {{- include "eoloplants.labels" . | nindent 4 }}
spec:
  ports:
  - port: {{ .Values.serviceserver.port }}
    targetPort: 3000
    protocol: TCP
    name: {{ $fullName }}-server-port
  selector:
    app: {{ $fullName }}-server
  type: {{ .Values.exposedServiceType }}

{{- if .Values.useNetworkPolicies }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ $fullName }}-server-to-mysql-rabbit
spec:
  podSelector:
    matchLabels:
      app: {{ $fullName }}-server
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: {{ $fullName }}-mysql
    ports:
    - port: 3306
      protocol: TCP
  - to:
    - podSelector:
        matchLabels:
          app: {{ $fullName }}-rabbitmq
    ports:
    - port: 5672
      protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ $fullName }}-server-from-ingress
spec:
  podSelector:
    matchLabels:
      app: {{ $fullName }}-server
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: ingress-nginx
        podSelector:
          matchLabels:
            app.kubernetes.io/name: ingress-nginx
      ports:
      - protocol: TCP
        port: 3000
{{- end -}}
