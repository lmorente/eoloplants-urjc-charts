---
{{- $fullName := include "eoloplants.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}-toposervice-deploy
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ $fullName }}-toposervice
      {{- include "eoloplants.selectorLabels" . | nindent 6 }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ $fullName }}-toposervice
        {{- include "eoloplants.selectorLabels" . | nindent 8 }}
        dns-policy: enabled
    spec:
      securityContext:
        runAsUser: 1001
      restartPolicy: Always
      containers:
      - name: {{ $fullName }}-toposervice
        image: {{ .Values.images.toposervice.repository }}:{{ .Values.images.toposervice.tag }} 
        imagePullPolicy: {{ .Values.images.toposervice.pullPolicy }}
        env:
        - name: SPRING_DATA_MONGODB_HOST
          value: {{ $fullName }}-mongodb-service
        - name: SPRING_DATA_MONGODB_PORT
          value: "27017"
        - name: SPRING_DATA_MONGODB_DATABASE
          value: topoDB
        - name: SPRING_DATA_MONGODB_AUTHENTICATION-DATABASE
          value: admin
        - name: SPRING_DATA_MONGODB_USERNAME
          value: root
        - name: SPRING_DATA_MONGODB_PASSWORD
          value: password
        ports:
        - containerPort: 8181
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $fullName }}-toposervice-service
  labels:
    app: {{ $fullName }}-toposervice
    {{- include "eoloplants.selectorLabels" . | nindent 4 }}
spec:
  ports:
  - port: {{ .Values.servicetopo.port }}
    targetPort: 8181
    protocol: TCP
    name: {{ $fullName }}-topo-port
  selector:
    app: {{ $fullName }}-toposervice
  type: {{ .Values.exposedServiceType }}

{{- if .Values.useNetworkPolicies }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ $fullName }}-topo-to-mongodb
spec:
  podSelector:
    matchLabels:
      app: {{ $fullName }}-toposervice
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: {{ $fullName }}-mongodb
    ports:
    - port: 27017
      protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ $fullName }}-topo-from-planner-ingress
spec:
  podSelector:
    matchLabels:
      app: {{ $fullName }}-toposervice
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: {{ $fullName }}-planner
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: ingress-nginx
      podSelector:
        matchLabels:
          app.kubernetes.io/name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8181
{{- end -}}
