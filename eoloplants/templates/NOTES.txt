1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.exposedServiceType }}
  export NODE_PORT_SERVER=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "eoloplants.fullname" . }}-{{ .Values.serviceserver.name }})
  export NODE_PORT_TOPO=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "eoloplants.fullname" . }}-{{ .Values.servicetopo.name }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{ .items[0].status.addresses[0].address }")
  echo http://$NODE_IP:$NODE_PORT_SERVER
  echo http://$NODE_IP:$NODE_PORT_TOPO
{{- else if contains "LoadBalancer" .Values.exposedServiceType }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "eoloplants.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "eoloplants.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.serviceserver.port }}
  echo http://$SERVICE_IP:{{ .Values.servicetopo.port }}/toposervice/
{{- else if contains "ClusterIP" .Values.exposedServiceType }}
  export POD_NAME_SERVER=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "eoloplants.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{ .items[0].metadata.name }")
  export POD_NAME_TOPO=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "eoloplants.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{ .items[1].metadata.name }")
  export CONTAINER_PORT_SERVER=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME_SERVER -o jsonpath="{ .spec.containers[0].ports[0].containerPort }")
  export CONTAINER_PORT_TOPO=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME_TOPO -o jsonpath="{ .spec.containers[0].ports[0].containerPort }")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME_SERVER 8080:$CONTAINER_PORT_SERVER
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME_TOPO 8080:$CONTAINER_PORT_TOPO
{{- end }}
